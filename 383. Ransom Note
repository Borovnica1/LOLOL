Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

 

Example 1:

Input: ransomNote = "a", magazine = "b"
Output: false
Example 2:

Input: ransomNote = "aa", magazine = "ab"
Output: false
Example 3:

Input: ransomNote = "aa", magazine = "aab"
Output: true


My Solution:

class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        if ransomNote == "" : return True
        if magazine == "" : return False
        mag_dict = {}
        ran_dict = {}
        for index in range(len(magazine)):
            if magazine[index] in mag_dict:
                mag_dict[magazine[index]] += 1
            else:
                mag_dict[magazine[index]] = 1
            if index < len(ransomNote):
                if ransomNote[index] in ran_dict:
                    ran_dict[ransomNote[index]] += 1
                else:
                    ran_dict[ransomNote[index]] = 1
            
        print(mag_dict, ran_dict)
        for key in ran_dict:
            print(ran_dict[key])
            if key not in mag_dict: return False
            if ran_dict[key] > mag_dict[key]: return False
        return True
