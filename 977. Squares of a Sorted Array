Prob

Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

 

Example 1:

Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].
Example 2:

Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]


Soll:

class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        l = len(nums) - 1
        i = 0
        answer = []
        while len(answer) != len(nums):
            if nums[i] < 0:
                nums[i] *= -1
            if nums[l] < 0:
                nums[l] *= -1
            if nums[i] > nums[l]:
                answer.insert(0, nums[i] * nums[i])
                i += 1
            else:
                answer.insert(0, nums[l] * nums[l])
                l -= 1
        return answer
