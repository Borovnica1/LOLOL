Prob:

There is only one character 'A' on the screen of a notepad. You can perform two operations on this notepad for each step:

Copy All: You can copy all the characters present on the screen (a partial copy is not allowed).
Paste: You can paste the characters which are copied last time.
Given an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.

 

Example 1:

Input: n = 3
Output: 3
Explanation: Intitally, we have one character 'A'.
In step 1, we use Copy All operation.
In step 2, we use Paste operation to get 'AA'.
In step 3, we use Paste operation to get 'AAA'.
Example 2:

Input: n = 1
Output: 0
 

Constraints:

1 <= n <= 1000

My SOl:

class Solution:
    def minSteps(self, n: int) -> int:
        if n == 1: return 0
        
        def rec(s, c, copied, cnt):
            if s == n: return cnt
            if s > n: return float('infinity')
            opCopy = float('infinity')
            if not copied:
                opCopy = rec(s, s, True, cnt+1)
            opPaste = rec(s+c, c, False, cnt+1)
            op = min(opPaste, opCopy)
            return op
            
            
        ide = rec(1, 1, True, 1)
        return ide

eff dp sol:

class Solution:
    def minSteps(self, n: int) -> int:
        
        dp = [0 for _ in range(n+1)]
        
        for i in range(2, n+1):
            dp[i] = i
            
            for j in range((i-1)//2, 0, -1):
                if i % j == 0:
                    dp[i] = dp[j] + (i//j)
                    break
        
        return dp[-1]
