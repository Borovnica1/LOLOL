Prob:

Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-231 <= nums[i] <= 231 - 1

My Sol:

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        d = {}
        l  = len(nums)
        for n in nums:
            if n in d:
                d[n] += 1
            else: d[n] = 1
            if d[n] > l / 2: return n
