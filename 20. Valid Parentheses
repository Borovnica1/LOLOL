Prob:

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.


My SOl:

class Solution:
    def isValid(self, s: str) -> bool:
        
        arr = []
        
        for p in s:
            
            if p == '(' or p == '[' or p == '{':
                arr.append(p)
            else:
                if len(arr) == 0: return False
                if p == ')' and arr[-1] == '(':
                    arr.pop()
                elif p == ']' and arr[-1] == '[':
                    arr.pop()
                elif p == '}' and arr[-1] == '{':
                    arr.pop()
                else:
                    return False
        return True if arr == [] else False
                
