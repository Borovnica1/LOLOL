Prob:

Given an array of integers arr, return true if and only if it is a valid mountain array.

Recall that arr is a mountain array if and only if:

arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i]
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]

 

Example 1:

Input: arr = [2,1]
Output: false
Example 2:

Input: arr = [3,5,5]
Output: false
Example 3:

Input: arr = [0,3,2,1]
Output: true


Soll:

class Solution:
    def validMountainArray(self, arr: List[int]) -> bool:
        if len(arr) < 3: return False
        max = 0
        maxFound = False
        noValley = True
        for i in range(1, len(arr)):
            print(max)
            
            if arr[i] > arr[i-1]:
                max = arr[i]
            if max > arr[i]:
                maxFound = True
                noValley = False
            if maxFound:
                if arr[i] == arr[i-1] or arr[i] > arr[i-1]:
                    return False
            if maxFound == False:
                if arr[i] == arr[i-1] or arr[i] < arr[i-1]:
                    return False
            
        if noValley:
            return False
        return True
