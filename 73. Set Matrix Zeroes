Prob:

Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.

Follow up:

A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
 

Example 1:


Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:


Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


My SOl:

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        if len(matrix) < 1: return matrix
        m = len(matrix)
        n = len(matrix[0])
        def clear(i, j):
            for k in range(0, i):
                if matrix[k][j] != 0:
                    matrix[k][j] = float('inf')
            for k in range(i, m):
                if matrix[k][j] != 0:
                    matrix[k][j] = float('inf')
            for k in range(0, j):
                if matrix[i][k] != 0:
                    matrix[i][k] = float('inf')
            for k in range(j, n):
                if matrix[i][k] != 0:
                    matrix[i][k] = float('inf')
            
            
        
        for i in range(0, m):
            for j in range(0, n):
                if matrix[i][j] == 0:
                    matrix[i][j] = float('inf')
                    clear(i, j)
        for i in range(0, m):
            for j in range(0, n):
                if matrix[i][j] == float('inf'):
                    matrix[i][j] = 0
        print(matrix)
        return matrix

Improved SOl:

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        if len(matrix) < 1: return matrix
        m = len(matrix)
        n = len(matrix[0])
        rows, cols = [], []
        
        for i in range(0, m):
            for j in range(0, n):
                if matrix[i][j] == 0:
                    if i not in rows: rows.append(i)
                    if j not in cols: cols.append(j)
        for row in rows:
            for j in range(0, n):
                matrix[row][j] = 0
        for col in cols:
            for i in range(0, m):
                matrix[i][col] = 0        
        return matrix
