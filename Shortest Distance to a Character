Prob:

Given a string s and a character c that occurs in s, return an array of integers answer where answer.length == s.length and answer[i] is the shortest distance from s[i] to the character c in s.

 

Example 1:

Input: s = "loveleetcode", c = "e"
Output: [3,2,1,0,1,0,0,1,2,2,1,0]
Example 2:

Input: s = "aaab", c = "b"
Output: [3,2,1,0]


Solution:

class Solution:
    def shortestToChar(self, s: str, c: str) -> List[int]:
        answer = [None] * len(s)
        print(answer)
        subStr =  ''
        afterFlow = 999
        index = 0
        for char in s:
            answer[index] = afterFlow
            afterFlow += 1
            subStr += char
            print(subStr)
            if char == c:
                afterFlow = 1
                l = len(subStr) - 1
                for i in range(l, -1, -1):
                    print(i)
                    curIndex = index
                    if answer[curIndex-i] > i:
                        answer[curIndex-i] = i
                subStr = ''
            index += 1
        print(answer)
        return answer
